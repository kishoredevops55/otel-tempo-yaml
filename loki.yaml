apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: loki
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: loki
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: loki
    spec:
      containers:
        - args:
            - -config.file=/etc/loki/loki-local.yaml
          env:
            - name: JAEGER_AGENT_HOST
              value: tempo
            - name: JAEGER_ENDPOINT
              value: http://tempo:14268/api/traces
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: JAEGER_SAMPLER_TYPE
              value: const
          image: grafana/loki:2.2.0
          name: loki
          ports:
            - containerPort: 3100
          resources: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: loki-claim0
              mountPath: /etc/loki/loki-local.yaml
            - name: loki-claim1
              mountPath: /tmp/loki
      volumes:
        - name: loki-claim0
          hostPath:
            path: /root/boot-opentelemetry-tempo/etc/loki-local.yaml
        - name: loki-claim1
          hostPath:
            path: /root/boot-opentelemetry-tempo/data/loki-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: loki
  name: loki
spec:
  ports:
    - name: "3101"
      port: 3100
      protocol: TCP
      targetPort: 3100
  selector:
    io.kompose.service: loki
status:
  loadBalancer: {}